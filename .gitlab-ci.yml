image: docker:latest

variables:
  BARBERINI_ANALYTICS_CONTEXT: CI

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH  

# Stages are required a) to priorize jobs and b) to avoid concurrency issues.
stages:
  - build
  - test
  - analyze

build:
  stage: build
  tags:
    - barberini
  script:
    - docker build -t test ./docker $(
        [[ -n $"CI_MERGE_REQUEST_TARGET_BRANCH_SHA" ]]
        && git diff --name-only ^${CI_MERGE_REQUEST_TARGET_BRANCH_NAME} | grep -q docker/
        && echo '--no-cache' 
      )

unittest:
  stage: test
  tags:
    - barberini
  before_script:  # prepare docker
    - USER="gitlab_runner_${CI_PIPELINE_ID}"
    - make startup
  script:  # run coverage tests
    - docker exec --env FULL_TEST=$FULL_TEST $USER-barberini_analytics_luigi make coverage
  after_script:  # cleanup docker
    - make docker-cleanup

  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'
  artifacts:
    paths: 
      - htmlcov

minimal-mining-pipeline:
  stage: test
  tags:
    - barberini
  before_script:
    - USER="gitlab_runner_${CI_PIPELINE_ID}"
  script:
    - ./scripts/tests/run_minimal_mining_pipeline.sh

lint:
  stage: analyze
  tags:
    - barberini
  script:
    - make lint

validate-markdown:
  stage: analyze
  tags:
    - barberini
  before_script:
    - container=$(docker ps -f name=gitlab-runner-barberini_analytics_luigi -q)
    - if [ -n "$container" ]; then docker stop $container && docker rm $container; fi
    - make startup
  script:
    - docker exec gitlab-runner-barberini_analytics_luigi /node_modules/remark-cli/cli.js -f -u validate-links .
  after_script:
    - make shutdown
